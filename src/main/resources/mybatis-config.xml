<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 参数设置 -->

    <properties resource="db.properties"></properties>
    <settings>
        <!-- 打印查询语句 -->
        <setting name="logImpl" value="STDOUT_LOGGING" />
        <!-- 控制全局缓存（二级缓存），默认 true-->
        <setting name="cacheEnabled" value="true"/>

        <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。默认 false -->
        <setting name="lazyLoadingEnabled" value="true"/>

        <!-- 当开启时，任何方法的调用都会加载该对象的所有属性。默认 false，可通过select标签 的 fetchType来覆盖-->
        <setting name="aggressiveLazyLoading" value="true"/>

        <!--一级缓存-->
        <setting name="localCacheScope" value="STATEMENT"/>
    </settings>

    <!--类型别名，xml配置中可直接使用别名，而不需要写全路径-->
    <typeAliases>
        <typeAlias alias="person" type="com.liangzc.example.mybatis.model.Person" />
    </typeAliases>

    <!-- 类型处理器，主要用于JDBC字段类型与Java属性类型的映射，比如：JDBC varchar 对应于 JAVA String -->
    <typeHandlers>
        <typeHandler handler="com.liangzc.example.mybatis.PersonTypeHandler"/>
    </typeHandlers>



    <plugins>
        <plugin interceptor="com.liangzc.example.mybatis.interceptor.TableHeadInterceptor"/>
    </plugins>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="com/liangzc/example/mybatis/mapper/PersonMapper.xml"/>
    </mappers>
</configuration>