泛型：
    泛型是在编译时提供类型的机制，使得可以在不丢失类型信息的情况下编写通用代码。
    通过使用泛型，可以编写适用于多种数据类型的代码，而不需要在运行时进行类型转换或使用类型检查。

类型参数
    类型参数通常用大写字母表示，常见的命名约定包括：
    T - Type
    E - Element
    K - Key
    V - Value
    N - Number

泛型的优点：
    1、类型安全性:
        编译器会在编译时检查类型，减少运行时错误。
    2、代码复用:
        可以编写适用于多种类型的通用代码。
    3、消除强制类型转换:
        不需要显式地进行类型转换。
    4、增强可读性和可维护性:
        代码更清晰，易于理解和维护。


泛型类 (Box<T>) 使用类型参数来定义整个类的行为。
包含泛型方法的普通类 (GenericUtils) 在类声明中不包含类型参数，但在方法声明中包含类型参数。